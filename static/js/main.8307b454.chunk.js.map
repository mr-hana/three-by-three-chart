{"version":3,"sources":["store/useActions.js","modules/index.js","store/index.js","components/ChartContent.js","components/Chart.js","pages/IndexPage.js","components/NewKeyword.js","pages/NewPage.js","pages/RandomPage.js","routes.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["useActions","initialState","reducers","dispathcers","_React$useReducer","React","useReducer","_React$useReducer2","Object","slicedToArray","Positions","createInitialState","selectedKey","parentKey","charts","topLeft","key","value","topCenter","topRight","middleLeft","middleCenter","arguments","length","undefined","middleRight","bottomLeft","bottomCenter","bottomRight","state","action","type","newChart","objectSpread","getters","getSelectedChart","payload","position","map","item","chart","getChart","findParent","maxKey","getMaxKey","selectedChart","getContent","addChart","createChart","concat","toConsumableArray","newState","keyword","dispatchers","dispatch","changeContent","selectChart","selectCenterOfCharts","initChart","getPositions","isCreation","generateRandomChart","contents","extractContents","keys","selection","takeRandom","randomChart","i","contentIndex","get","middleCenterKey","find","_i","_Positions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","initialKey","reduce","a","b","Math","max","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_i2","_Positions2","content","has","set","array","number","original","slice","randomIndex","floor","random","push","splice","Store","createContext","StoreProvider","props","_useActions","_useActions2","actions","react_default","createElement","Provider","children","useStyles","makeStyles","theme","container","padding","paper","spacing","color","palette","text","secondary","height","display","alignItems","justifyContent","minHeight","ChartContent","classes","_useContext","useContext","isMiddleCenter","_useState","useState","_useState2","setValue","_useState3","_useState4","isEditng","setEditng","inputElement","useRef","useEffect","current","focus","className","Paper","onClick","isRandom","onDoubleClick","navigateIndex","TextField","inputRef","fullWidth","multiline","onChange","e","inputValue","target","onBlur","Typography","variant","component","gridContainer","gridTemplateColumns","Chart","chartContents","components_ChartContent","IndexPage","history","location","pathname","components_Chart","root","card","width","NewKeyword","Card","CardHeader","title","subheader","CardContent","Box","mb","label","CardActions","Button","navigateNext","NewPage","components_NewKeyword","RandomPage","routes","name","path","exact","pages_IndexPage","isMenu","onlyCreated","pages_RandomPage","pages_NewPage","flexDirection","appBar","menuButton","marginRight","flexGrow","MainContainer","_React$useState","_React$useState2","anchorEl","setAnchorEl","open","Boolean","contentRoutes","filter","route","menuRoutes","renderLink","forwardRef","itemProps","ref","react_router_dom","assign","handleClose","basename","AppBar","Toolbar","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu_default","Menu_Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","index","MenuItem","to","style","flex","react_router","createMuiTheme","primary","amber","yellow","typography","button","textTransform","MuiCheckbox","MuiRadio","MuiSwitch","App","ThemeProvider","CssBaseline","store_StoreProvider","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8307b454.chunk.js","sourcesContent":["import React from 'react';\n\nconst useActions = (initialState, reducers, dispathcers) => {\n  const [state, dispatch] = React.useReducer(reducers, initialState);\n  const actions = dispathcers(dispatch);\n  return [state, actions];\n}\n\nexport default useActions;","const CenterKey = 5;\nconst Positions = ['topLeft', 'topCenter', 'topRight', 'middleLeft', 'middleCenter', 'middleRight', 'bottomLeft', 'bottomCenter', 'bottomRight'];\n\nconst isCenter = key => CenterKey === key;\nconst createInitialState = (centerValue = '') => {\n  return {\n    selectedKey: CenterKey,\n    parentKey: CenterKey,\n    charts: [{\n      topLeft: { key: 1, value: '' },\n      topCenter: { key: 2, value: '' },\n      topRight: { key: 3, value: '' },\n      middleLeft: { key: 4, value: '' },\n      middleCenter: { key: CenterKey, value: centerValue },\n      middleRight: { key: 6, value: '' },\n      bottomLeft: { key: 7, value: '' },\n      bottomCenter: { key: 8, value: '' },\n      bottomRight: { key: 9, value: '' },\n    }]\n  };\n}\n\nexport const initialState = createInitialState();\nexport const reducers = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE_CONTENT':\n      let newChart = { ...getters(state).getSelectedChart() };\n      newChart[action.payload.position].value = action.payload.value;\n      return {\n        ...state,\n        charts: state.charts.map(item => {\n          return item.middleCenter.key === state.selectedKey ? newChart : item;\n        }),\n      };\n    case 'SELECT_CHART':\n      const selectedKey = action.payload.selectedKey;\n      const chart = getChart(state.charts, selectedKey);\n      let parentKey = CenterKey;\n      if (!isCenter(selectedKey)) {\n        const parent = findParent(state.charts, selectedKey);\n        parentKey = parent.middleCenter.key;\n      }\n\n      if (chart) {\n        return {\n          ...state,\n          selectedKey: selectedKey,\n          parentKey: parentKey\n        };\n      }\n\n      const maxKey = getMaxKey(state.charts);\n      let selectedChart = getChart(state.charts, selectedKey);\n      if (selectedChart == null) {\n        selectedChart = findParent(state.charts, selectedKey);\n      }\n      const middleCenter = getContent(selectedChart, selectedKey);\n      let addChart = createChart(middleCenter, maxKey + 1);\n      return {\n        ...state,\n        selectedKey: selectedKey,\n        parentKey: state.selectedKey,\n        charts: [...state.charts, addChart]\n      };\n    case 'INIT_CHART':\n      const newState = createInitialState(action.payload.keyword);\n      return { ...newState };\n    default:\n      return state;\n  }\n}\n\nexport const dispatchers = dispatch => {\n  return {\n    changeContent: (position, value) => {\n      dispatch({\n        type: 'CHANGE_CONTENT',\n        payload: { position, value }\n      });\n    },\n    selectChart: selectedKey => {\n      dispatch({ type: 'SELECT_CHART', payload: { selectedKey: selectedKey } });\n    },\n    selectCenterOfCharts: () => {\n      dispatch({ type: 'SELECT_CHART', payload: { selectedKey: CenterKey } });\n    },\n    initChart: keyword => {\n      dispatch({ type: 'INIT_CHART', payload: { keyword: keyword } });\n    }\n  };\n}\n\nexport const getters = state => {\n  return {\n    getPositions: () => {\n      return Positions;\n    },\n    getSelectedChart: () => {\n      return getChart(state.charts, state.selectedKey);\n    },\n    isCreation: () => {\n      const centerChart = getChart(state.charts, CenterKey);\n      return centerChart.middleCenter.value !== '';\n    },\n    generateRandomChart: () => {\n      const contents = extractContents(state.charts);\n      const keys = [...contents.keys()];\n      const selection = takeRandom(keys, Positions.length);\n      const randomChart = {};\n      for (let i = 0; i < Positions.length; i++) {\n        const position = Positions[i];\n        const contentIndex = selection[i];\n        randomChart[position] = contents.get(contentIndex);\n      }\n\n      return randomChart;\n    }\n  };\n}\n\nconst getChart = (charts, middleCenterKey) => {\n  return charts.find(item => item.middleCenter.key === middleCenterKey);\n}\n\nconst getContent = (chart, key) => {\n  for (const position of Positions) {\n    if (chart[position].key === key) {\n      return chart[position];\n    }\n  }\n\n  return null;\n}\n\nconst findParent = (charts, key) => {\n  for (const chart of charts) {\n    if (chart.middleCenter.key === key) {\n      continue;\n    }\n\n    const content = getContent(chart, key);\n    if (content) {\n      return chart;\n    }\n  }\n\n  return null;\n}\n\nconst createChart = (middleCenter, initialKey) => {\n  let key = initialKey;\n  return {\n    topLeft: { key: key++, value: '' },\n    topCenter: { key: key++, value: '' },\n    topRight: { key: key++, value: '' },\n    middleLeft: { key: key++, value: '' },\n    middleCenter: { key: middleCenter.key, value: middleCenter.value },\n    middleRight: { key: key++, value: '' },\n    bottomLeft: { key: key++, value: '' },\n    bottomCenter: { key: key++, value: '' },\n    bottomRight: { key: key++, value: '' },\n  };\n}\n\nconst getMaxKey = charts => {\n  const chartWithMaxKey = charts.reduce((a, b) => Math.max(a.bottomRight, b.bottomRight) ? a : b);\n  return chartWithMaxKey.bottomRight.key;\n}\n\nconst extractContents = charts => {\n  const contents = new Map();\n  for (const chart of charts) {\n    for (const position of Positions) {\n      const content = chart[position];\n      if (contents.has(content.key)) {\n        continue;\n      }\n\n      contents.set(content.key, content);\n    }\n  }\n\n  return contents;\n}\n\nconst takeRandom = (array, number) => {\n  const original = array.slice();\n  const selection = [];\n\n  while (selection.length < number && original.length > 0) {\n    const randomIndex = Math.floor(Math.random() * original.length);\n    selection.push(original[randomIndex]);\n    original.splice(randomIndex, 1);\n  }\n\n  return selection;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useActions from './useActions';\nimport { initialState, reducers, dispatchers, getters } from '../modules';\n\nexport const Store = React.createContext();\nexport const StoreProvider = props => {\n  const [state, actions] = useActions(initialState, reducers, dispatchers);\n  const storeGetters = getters(state);\n  const value = { state, actions, getters: storeGetters };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n};\n\nStoreProvider.propTypes = {\n  children: PropTypes.object.isRequired\n};\n","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { Store } from '../store';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '5px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    // TextFieldの高さと動的に合わせたい。。。\n    minHeight: '32px',\n  }\n}));\n\nconst ChartContent = props => {\n  const classes = useStyles();\n  const { state, actions } = useContext(Store);\n  const isMiddleCenter = props.position === 'middleCenter';\n  const [value, setValue] = useState(props.content.value);\n  const [isEditng, setEditng] = useState(false);\n  const inputElement = useRef(null);\n  useEffect(() => {\n    if (isEditng) {\n      inputElement.current.focus();\n    }\n  }, [isEditng]);\n\n  const handleSingleClick = () => {\n    if (!props.isRandom && !isMiddleCenter) {\n      setEditng(true);\n    }\n  }\n\n  const handleDoubleClick = () => {\n    setEditng(false);\n    let selectedKey = props.content.key;\n    if (!props.isRandom && isMiddleCenter) {\n      selectedKey = state.parentKey;\n    }\n\n    actions.selectChart(selectedKey);\n    props.navigateIndex();\n  }\n\n  const handleChange = inputValue => {\n    setValue(inputValue);\n  }\n\n  const handleBlur = () => {\n    actions.changeContent(props.position, value);\n    setEditng(false);\n  }\n\n  return (\n    <div className={classes.container}>\n      <Paper className={classes.paper} onClick={handleSingleClick} onDoubleClick={handleDoubleClick}>\n        {\n          isEditng ? (\n            <TextField\n              inputRef={inputElement}\n              fullWidth\n              multiline\n              value={value}\n              onChange={e => handleChange(e.target.value)}\n              onBlur={handleBlur} />\n          ) : (\n              <Typography variant=\"h6\" component=\"p\" className={classes.text}>\n                {value}\n              </Typography>\n            )\n        }\n      </Paper>\n    </div>\n  );\n}\n\nexport default ChartContent;","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChartContent from './ChartContent';\nimport { Store } from '../store';\n\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    height: '100%',\n  }\n}));\n\nconst Chart = props => {\n  const classes = useStyles();\n  const { getters } = useContext(Store);\n\n  const chartContents = getters.getPositions()\n    .map(position => {\n      const content = props.chart[position];\n      return <ChartContent\n        key={content.key}\n        position={position}\n        content={content}\n        isRandom={props.isRandom}\n        navigateIndex={props.navigateIndex}\n      />;\n    });\n\n  return (\n    <div className={classes.gridContainer}>\n      {chartContents}\n    </div>\n  );\n}\n\nexport default Chart","import React, { useContext } from 'react';\nimport Chart from '../components/Chart';\nimport { Store } from '../store';\n\nconst IndexPage = props => {\n  const { actions, getters } = useContext(Store);\n  const navigateIndex = () => props.history.push('/');\n  if (props.location.pathname === '/center') {\n    actions.selectCenterOfCharts();\n    navigateIndex();\n  }\n\n  const chart = getters.getSelectedChart();\n  return (\n    <Chart chart={chart} isRandom={false} navigateIndex={navigateIndex} />\n  );\n}\n\nexport default IndexPage;","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Store } from '../store';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    width: '80%'\n  }\n}));\n\nconst NewKeyword = props => {\n  const classes = useStyles();\n  const { actions } = useContext(Store);\n  const [value, setValue] = useState('');\n  const handleChange = inputValue => {\n    setValue(inputValue);\n  }\n\n  const handleClick = () => {\n    actions.initChart(value);\n    props.navigateNext();\n  }\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title=\"Input new keyword\" subheader=\"Click the new button to delete the current chart and create a new chart.\" />\n        <CardContent>\n          <Box mb={2}>\n            <TextField\n              label=\"keyword\"\n              fullWidth\n              value={value}\n              onChange={e => handleChange(e.target.value)} />\n          </Box>\n        </CardContent>\n        <CardActions>\n          <Button variant=\"contained\" fullWidth color=\"primary\" onClick={handleClick}>New</Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n\nexport default NewKeyword","import React from 'react';\nimport NewKeyword from '../components/NewKeyword';\n\nconst NewPage = props => {\n  const navigateIndex = () => props.history.push('/');\n  return (\n    <NewKeyword navigateNext={navigateIndex} />\n  );\n}\n\nexport default NewPage;","import React, { useContext } from 'react';\nimport Chart from '../components/Chart';\nimport { Store } from '../store';\n\nconst RandomPage = props => {\n  const { getters } = useContext(Store);\n  const chart = getters.generateRandomChart();\n  const navigateIndex = () => props.history.push('/');\n  return (\n    <Chart chart={chart} isRandom={true} navigateIndex={navigateIndex} />\n  );\n}\n\nexport default RandomPage;","import React from \"react\";\nimport IndexPage from \"./pages/IndexPage\";\nimport NewPage from \"./pages/NewPage\";\nimport RandomPage from \"./pages/RandomPage\";\n\nexport default [\n  {\n    name: \"\",\n    path: \"/\",\n    exact: true,\n    component: props => <IndexPage {...props} />,\n    isMenu: false,\n    onlyCreated: true,\n  },\n  {\n    name: \"Center\",\n    path: \"/center\",\n    component: props => <IndexPage {...props} />,\n    isMenu: true,\n    onlyCreated: true,\n  },\n  {\n    name: \"Random\",\n    path: \"/random\",\n    component: props => <RandomPage {...props} />,\n    isMenu: true,\n    onlyCreated: true,\n  },\n  {\n    name: \"New\",\n    path: \"/new\",\n    component: props => <NewPage {...props} />,\n    isMenu: true,\n    onlyCreated: false,\n  }\n];","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport routes from '../routes';\nimport { Store } from '../store';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh'\n  },\n  appBar: {\n    height: 'auto',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MainContainer () {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const { getters } = useContext(Store);\n  const isCreation = getters.isCreation();\n  const contentRoutes = isCreation\n    ? routes\n    : routes.filter(route => !route.onlyCreated);\n  const menuRoutes = contentRoutes\n    .filter(route => route.isMenu);\n  const renderLink = React.forwardRef((itemProps, ref) => (\n    <Link {...itemProps} ref={ref} />\n  ));\n\n  function handleMenu (event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose () {\n    setAnchorEl(null);\n  }\n\n  return (\n    <Router\n      basename=\"/three-by-three-chart\">\n      <div className={classes.root}>\n        <div className={classes.appBar}>\n          <AppBar position=\"static\" >\n            <Toolbar>\n              <IconButton edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"Menu\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}>\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                {menuRoutes.map((route, index) => (\n                  <MenuItem key={index} to={route.path} onClick={handleClose} component={renderLink}>\n                    {route.name}\n                  </MenuItem>\n                ))}\n              </Menu>\n              <Typography variant=\"h6\" className={classes.title}>\n                Three by three chart\n          </Typography>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <div style={{ flex: 1, padding: \"10px\" }}>\n          {contentRoutes.map(route => (\n            <Route\n              key={route.name}\n              path={route.path}\n              exact={route.exact}\n              component={route.component}\n            />\n          ))}\n        </div>\n      </div >\n    </Router>\n  );\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport yellow from '@material-ui/core/colors/yellow';\nimport MainContainer from './components/MainContainer';\nimport { StoreProvider } from './store';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: amber,\n    secondary: yellow,\n  },\n  typography: {\n    button: {\n      textTransform: \"none\"\n    }\n  },\n  props: {\n    MuiCheckbox: {\n      color: \"primary\"\n    },\n    MuiRadio: {\n      color: \"primary\"\n    },\n    MuiSwitch: {\n      color: \"primary\"\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <StoreProvider>\n        <MainContainer />\n      </StoreProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}